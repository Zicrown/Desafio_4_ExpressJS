Atender a los requerimientos listados a continuacion: Las rutas establecidas son las siguientes: login [si está correctamente autenticado debe dar ingreso a dashboard, generar un JsonWebToken para su validación, en caso de no estar correctamente autenticado manejar el informe de error y notificar al usuario.], dashboard [debe verificar que el JWT sea valido y no haya expirado. Colocar un periodo de expiracion de 1 minuto; en caso de que el JWT haya expirado debe ser redirigido al login (note que no siempre se esta haciendo peticiones a esta ruta, asi que solo si se realiza una peticion a esta ruta es cuando verificará la validez del token)], detail [ésta ruta tambien debe verificar la validez del JWT y su expiracion. Debe recibir por parametros un id para "simular" que se muestra información de dicho id, de no estar valido en JWT debe ser redirigido al login]. Debe adjuntar los archivos de su proyecto en un .rar adicional a todos los recursos que se soliciten en éste desafio.

1.- Establecer la planificacion del diseño de un API REST que gestionará el ingreso de usuarios a una aplicación web. La planificacion debe hacerse en un mapa o chart como el usado en clases (puede usar Lucidchart o algun software que permita hacer dicha planificacion ordenada y que se pueda compartir para su correccion). Debe tener una URL para poder revisar su recurso de planificación o un formato de archivo que sea de facil manejo para su revisión.

2.- Utilizando Postman, debe establecer sus rutas y protocolos HTTP (GET, POST, PUT, DELETE las que requiera), en base a lo solicitado. Debe generar la documentación de las respuestas de su API REST y debe compartir en enlace que conecta con su documentacion dentro de un .txt adjunto a la solucion de este desafio.

3.- Debe crear un proyecto nuevo que implementen express, donde esten establecidas y programadas las rutas y tipos de peticiones planificadas con anterioridad.

4.- Establezca la creacion y validacion de los JWT que se requieren en este desafio, estableciendo las variables de entorno (.env) que necesite para la validacion de los mismos. Recuerde que el tiempo de expiracion de dichos JWT es de 1 minuto.

5.- Debe publicar su API REST en el servicio Railway (railway.app) o en el servicio Render (render.com). Debe adjuntar un archivo .txt llamado instruccionesAPI.txt donde detalle muy especificamente como utilizar su API REST en base a lo indicado en la planificacion del requerimiento general de éste desafio que permita evaluar la ejecución de su API REST. En este desafio no es obligatorio realizar un frontend para el consumo de su API, sin embargo debe dejar en las instrucciones como poder probar su API REST. Debe indicar ademas la URL de su API REST con express.